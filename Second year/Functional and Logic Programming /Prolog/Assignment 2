%a. Substitute all occurrences of an element of a list with all the elements of another list.
% Eg. subst([1,2,1,3,1,4],1,[10,11],X) produces
% X=[10,11,2,10,11,3,10,11,4]


%appending(l1l2...ln,p1p2...pm)=p1...pm, n==0
%                               apppending(l2...ln,p1...pm), otherwise
                                
 
%subs(l1l2...ln,E,p1p2.....pm) = [], n==0
%                                [p1...pn] reunited with
%                                     subs(l2...ln,E,p1....pm), l1==E
%                                l1 + subs(l2...ln,E,p1...pm), othwise



appending([], L, L).
appending([H|T], L, [H|R]) :- appending(T, L, R).




%Base case:
subs([],_,_,[]).

%The case in which we have to replace the head:
subs([E|T],E,L,R):-
    subs(T,E,L,Rez),
    appending(L,Rez,R).

%Just place the head in the result and move on:
subs([H|T],E,L,[H|R]):-
    H=\=E,
    subs(T,E,L,R).



% b. For a heterogeneous list, formed from integer numbers and list of
% numbers, replace in every sublist all
%occurrences of the first element from sublist it a new given list.
% Eg.: [1, [4, 1, 4], 3, 6, [7, 10, 1, 3, 9], 5, [1, 1, 1], 7] si [11,
% 11] =>
% [1, [11, 11, 1, 11, 11], 3, 6, [11, 11, 10, 1, 3, 9], 5, [11 11 11 11
% 11 11], 7

   
   
%callingSubs(l1l2...ln, p1p2...pm) = subs(l1l2..ln, l1, p1...pm).

%replace(l1l2....ln, p1p2....pm) = [], n==0
%                                  callingSubs(l1l2..ln, p1..pm)
%                                        reunited with replace(l2..ln,
%                                        p1...pm) if l1 is_list
%                                  l1 + replace(l2..ln, p1..pm), othwise


callingSubs([H|T],L,R):-subs([H|T],H,L,R).


%Base case:
replace([],_,[]).

%The case in which the first element is a list:
replace([H|T],L,R):-
    is_list(H),
    callingSubs(H,L,RNew),
    replace(T,L,Rest),
    R = [RNew|Rest].

% If the element is not a list we just append it to the result and move
% on:
replace([H|T],L,[H|Rest]):-
    number(H),
    replace(T,L,Rest).

